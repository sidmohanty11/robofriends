{"version":3,"sources":["Card.tsx","SearchBox.tsx","Scroll.js","App.tsx","index.tsx"],"names":["Card","username","name","email","id","className","alt","src","SearchBox","searchfield","onSearchChange","type","placeholder","onChange","e","value","Scroll","props","style","overflowY","height","children","App","useState","robots","setRobots","setSearchField","useEffect","a","fetch","res","json","data","addRobots","filteredRobots","filter","robot","toLowerCase","includes","target","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAqBeA,MAZf,YAAmD,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,GACrC,OACC,sBAAKC,UAAU,mDAAf,UACC,qBAAKC,IAAI,GAAGC,IAAG,+BAA0BH,EAA1B,mBACf,gCACC,6BAAKH,IACL,uCAAUC,KAAS,wCAAWC,YCMnBK,MAdf,YAA6D,IAAxCC,EAAuC,EAAvCA,YAAaC,EAA0B,EAA1BA,eACjC,OACC,qBAAKL,UAAU,MAAf,SACA,uBACCA,UAAU,mCACVM,KAAK,SACLC,YAAY,gBACZC,SAAU,SAAAC,GAAC,OAAIJ,EAAeI,IAC9BC,MAAON,OCLKO,MARf,SAAgBC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,SAAzC,SACEH,EAAMI,YCuDKC,MA/Cf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACEC,EADF,OAEyBF,mBAAS,IAFlC,mBAENd,EAFM,KAEOiB,EAFP,KAIbC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACsBC,MAAM,8CAD5B,cACUC,EADV,gBAEuBA,EAAIC,OAF3B,OAEUC,EAFV,OAGIP,EAAUO,GAHd,4CADc,uBAAC,WAAD,wBAMdC,KACC,IAEH,IAGMC,EAAiBV,EAAOW,QAAO,SAACC,GAClC,OAAOA,EAAMlC,KAAKmC,cAAcC,SAAS7B,EAAY4B,kBAGzD,OACE,sBAAKhC,UAAU,SAAf,UACA,8CACA,cAAC,EAAD,CAAWI,YAAaA,EAAaC,eAVhB,SAACI,GACtBY,EAAeZ,EAAEyB,OAAOxB,UAUxB,cAAC,EAAD,UACGmB,EACCA,EAAeM,KAAI,SAACJ,GAAD,OACjB,cAAC,EAAD,CAEAhC,GAAIgC,EAAMhC,GACVF,KAAMkC,EAAMlC,KACZD,SAAUmC,EAAMnC,SAChBE,MAAOiC,EAAMjC,OAJRiC,EAAMhC,OAMXoB,EAAOgB,KAAI,SAACJ,GAAD,OACX,cAAC,EAAD,CAEAhC,GAAIgC,EAAMhC,GACVF,KAAMkC,EAAMlC,KACZD,SAAUmC,EAAMnC,SAChBE,MAAOiC,EAAMjC,OAJRiC,EAAMhC,a,MC3CrBqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.acc460c6.chunk.js","sourcesContent":["import React from 'react';\n\ntype robot = {\n\tid: number,\n\tusername: string,\n\temail: string,\n\tname: string,\n}\n\nfunction Card({username, name, email, id}: robot) {\n\treturn(\n\t\t<div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n\t\t\t<img alt=\"\" src={`https://robohash.org/${id}?size=200x200`} />\n\t\t\t<div>\n\t\t\t\t<h2>{username}</h2>\n\t\t\t\t<p>name: {name}</p><p>email: {email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;","import React, { ChangeEvent } from 'react';\n\ntype Search = {\n\tsearchfield: string,\n\tonSearchChange: (e: ChangeEvent<HTMLInputElement>) => void,\n}\n\nfunction SearchBox({ searchfield, onSearchChange }: Search) {\n\treturn (\n\t\t<div className=\"pa2\">\n\t\t<input \n\t\t\tclassName=\"pa3 ba b--green bg-lightest-blue\"\n\t\t\ttype=\"search\" \n\t\t\tplaceholder=\"Search Robots\" \n\t\t\tonChange={e => onSearchChange(e)}\n\t\t\tvalue={searchfield}\n\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default SearchBox;","import React from 'react';\n\nfunction Scroll(props){\n\treturn (\n\t\t<div style={{overflowY: 'scroll', height:'100vh'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t)\n}\n\nexport default Scroll;","import React, { useState, useEffect, ChangeEvent } from 'react';\nimport './App.css';\nimport Card from './Card';\nimport SearchBox from './SearchBox';\nimport Scroll from './Scroll';\n\ntype robot = {\n  id: number,\n  username: string,\n  email: string,\n  name: string,\n}\n\nfunction App() {\n  const [robots, setRobots] = useState([]);\n  const [searchfield, setSearchField] = useState('');\n\n  useEffect(() => { \n    async function addRobots() {\n        const res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n        const data = await res.json();\n        setRobots(data);\n    }\n    addRobots();\n  }, []);\n\n  const onSearchChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setSearchField(e.target.value);\n  }\n  const filteredRobots = robots.filter((robot: robot): boolean => {\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n  });\n\n  return (\n    <div className=\"App tc\">\n    <h1>ROBOFRIENDS!</h1>\n    <SearchBox searchfield={searchfield} onSearchChange={onSearchChange} />\n    <Scroll>\n      {filteredRobots? \n        filteredRobots.map((robot: robot) => (\n          <Card \n          key={robot.id} \n          id={robot.id} \n          name={robot.name} \n          username={robot.username}  \n          email={robot.email} />\n          )): \n          robots.map((robot: robot) => (\n          <Card \n          key={robot.id} \n          id={robot.id} \n          name={robot.name} \n          username={robot.username}  \n          email={robot.email} />\n        ))}\n    </Scroll>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}